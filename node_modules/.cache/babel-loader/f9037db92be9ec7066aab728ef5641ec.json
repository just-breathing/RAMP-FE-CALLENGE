{"ast":null,"code":"var _jsxFileName = \"/Users/sundeeprn/Downloads/ramp-fe-challenge 2/src/components/Transactions/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useRef, useEffect } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  _s();\n\n  let {\n    transactions\n  } = _ref;\n  const {\n    fetchWithoutCache,\n    loading\n  } = useCustomFetch();\n  const scrollViewRef = useRef(null);\n  const setTransactionApproval = useCallback(async _ref2 => {\n    let {\n      transactionId,\n      newValue\n    } = _ref2;\n    await fetchWithoutCache(\"setTransactionApproval\", {\n      transactionId,\n      value: newValue\n    });\n  }, [fetchWithoutCache]);\n  useEffect(() => {\n    if (scrollViewRef.current) {\n      console.log(scrollViewRef.current);\n\n      if (scrollViewRef.current) {\n        // Type assertion to inform TypeScript that scrollViewRef.current is not null\n        const element = scrollViewRef.current;\n        setTimeout(() => {\n          element.scroll({\n            top: 0,\n            behavior: 'smooth'\n          });\n        }, 200);\n      }\n    }\n  }, [transactions]);\n\n  if (transactions === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampLoading--container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"transaction-container\",\n    ref: scrollViewRef,\n    children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(TransactionPane, {\n      transaction: transaction,\n      loading: loading,\n      setTransactionApproval: setTransactionApproval\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transactions, \"v1vgGsMckjkiGSun00Uo25LH/D0=\", false, function () {\n  return [useCustomFetch];\n});\n\n_c = Transactions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useCallback","useRef","useEffect","useCustomFetch","TransactionPane","Transactions","transactions","fetchWithoutCache","loading","scrollViewRef","setTransactionApproval","transactionId","newValue","value","current","console","log","element","setTimeout","scroll","top","behavior","map","transaction","id"],"sources":["/Users/sundeeprn/Downloads/ramp-fe-challenge 2/src/components/Transactions/index.tsx"],"sourcesContent":["import { useCallback,useRef,useEffect } from \"react\"\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\"\nimport { SetTransactionApprovalParams } from \"src/utils/types\"\nimport { TransactionPane } from \"./TransactionPane\"\nimport { SetTransactionApprovalFunction, TransactionsComponent } from \"./types\"\n\nexport const Transactions: TransactionsComponent = ({ transactions }) => {\n  const { fetchWithoutCache, loading } = useCustomFetch()\n  const scrollViewRef=useRef(null);\n\n  const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n    async ({ transactionId, newValue }) => {\n      await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n        transactionId,\n        value: newValue,\n      })\n    },\n    [fetchWithoutCache]\n  )\n  useEffect(()=>{\n    if(scrollViewRef.current!)\n    {\n     console.log(scrollViewRef.current);\n     if (scrollViewRef.current) {\n      // Type assertion to inform TypeScript that scrollViewRef.current is not null\n      const element = scrollViewRef.current as HTMLDivElement;\n\n\n      setTimeout(()=>{\n        element.scroll({ top: 0, behavior: 'smooth' });\n\n      },200)\n\n    }  \n\n    }\n  },[transactions])\n\n  if (transactions === null) {\n    return <div className=\"RampLoading--container\">Loading...</div>\n  }\n\n  return (\n    <div data-testid=\"transaction-container\"ref={scrollViewRef} >\n      {transactions.map((transaction) => (\n        <TransactionPane\n          key={transaction.id}\n          transaction={transaction}\n          loading={loading}\n          setTransactionApproval={setTransactionApproval}\n        />\n      ))}\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,SAASA,WAAT,EAAqBC,MAArB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,SAASC,eAAT,QAAgC,mBAAhC;;AAGA,OAAO,MAAMC,YAAmC,GAAG,QAAsB;EAAA;;EAAA,IAArB;IAAEC;EAAF,CAAqB;EACvE,MAAM;IAAEC,iBAAF;IAAqBC;EAArB,IAAiCL,cAAc,EAArD;EACA,MAAMM,aAAa,GAACR,MAAM,CAAC,IAAD,CAA1B;EAEA,MAAMS,sBAAsB,GAAGV,WAAW,CACxC,eAAuC;IAAA,IAAhC;MAAEW,aAAF;MAAiBC;IAAjB,CAAgC;IACrC,MAAML,iBAAiB,CAAqC,wBAArC,EAA+D;MACpFI,aADoF;MAEpFE,KAAK,EAAED;IAF6E,CAA/D,CAAvB;EAID,CANuC,EAOxC,CAACL,iBAAD,CAPwC,CAA1C;EASAL,SAAS,CAAC,MAAI;IACZ,IAAGO,aAAa,CAACK,OAAjB,EACA;MACCC,OAAO,CAACC,GAAR,CAAYP,aAAa,CAACK,OAA1B;;MACA,IAAIL,aAAa,CAACK,OAAlB,EAA2B;QAC1B;QACA,MAAMG,OAAO,GAAGR,aAAa,CAACK,OAA9B;QAGAI,UAAU,CAAC,MAAI;UACbD,OAAO,CAACE,MAAR,CAAe;YAAEC,GAAG,EAAE,CAAP;YAAUC,QAAQ,EAAE;UAApB,CAAf;QAED,CAHS,EAGR,GAHQ,CAAV;MAKD;IAEA;EACF,CAjBQ,EAiBP,CAACf,YAAD,CAjBO,CAAT;;EAmBA,IAAIA,YAAY,KAAK,IAArB,EAA2B;IACzB,oBAAO;MAAK,SAAS,EAAC,wBAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAK,eAAY,uBAAjB;IAAwC,GAAG,EAAEG,aAA7C;IAAA,UACGH,YAAY,CAACgB,GAAb,CAAkBC,WAAD,iBAChB,QAAC,eAAD;MAEE,WAAW,EAAEA,WAFf;MAGE,OAAO,EAAEf,OAHX;MAIE,sBAAsB,EAAEE;IAJ1B,GACOa,WAAW,CAACC,EADnB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAhDM;;GAAMnB,Y;UAC4BF,c;;;KAD5BE,Y"},"metadata":{},"sourceType":"module"}